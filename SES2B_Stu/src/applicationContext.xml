<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--开启注解的扫描，希望处理service和dao，controller不需要Spring框架去处理-->
    <context:component-scan base-package="com" >
        <!--配置哪些注解不扫描-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>
	<!-- 第一步: 通过c3p0连接池，配置数据库信息 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
    	<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
    	<property name="jdbcUrl" value="jdbc:mysql://aagmqmvaq3h3zl.cvdpbjinsegf.us-east-2.rds.amazonaws.com:3306/uts_help?useSSL=false"></property>
   	    <property name="user" value="root"></property>
   	    <property name="password" value="rootroot"></property>
    </bean>
    
    <!-- 第二步: 创建sessionFactory,将其交给spring进行管理 -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
    	<!-- 因为hibernate核心配置文件中没有数据配置，数据库在spring里面配置，注入dataSource -->
    	<property name="dataSource" ref="dataSource"></property>
    	<!-- 配置hibernate基本信息: (1)指定hibernate使用核心配置文件 -->
    	<property name="configLocations" value="classpath:hibernate.cfg.xml"></property>
   		<!-- 配置hibernate基本信息: (2)如果不写hibernate核心配置文件 -->
   		<!-- <property name="hibernateProperties">
   			<props>
   				<prop key="hibernate.show_sql">true</prop>
   				<prop key="hibernate.format_sql">true</prop>
   				<prop key="dialect">org.hibernate.dialect.MySQLDialect</prop>
   			</props>
   		</property>
   		配置映射文件引入
   		<property name="mappingResources">
   			<list>  			
   				<value>com/bean/hbm/Admin.hbm.xml</value>
   				<value>com/bean/hbm/Advisor.hbm.xml</value>
   				<value>com/bean/hbm/Attendance.hbm.xml</value>
   				<value>com/bean/hbm/Comment.hbm.xml</value>
   				<value>com/bean/hbm/ConfirmationEmail.hbm.xml</value>
   				<value>com/bean/hbm/Message.hbm.xml</value>
   				<value>com/bean/hbm/ReminderEmail.hbm.xml</value>
   				<value>com/bean/hbm/Report.hbm.xml</value>
   				<value>com/bean/hbm/Room.hbm.xml</value>
   				<value>com/bean/hbm/Session.hbm.xml</value>
   				<value>com/bean/hbm/SkillSet.hbm.xml</value>
   				<value>com/bean/hbm/Student.hbm.xml</value>
   				<value>com/bean/hbm/StudentProfile.hbm.xml</value>
   				<value>com/bean/hbm/WaitingList.hbm.xml</value>
   				<value>com/bean/hbm/WorkShop.hbm.xml</value>
   			</list>
   		</property> -->
    </bean>
    <!-- 创建hibernateTemplate对象 -->
    <!-- <bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
    	注入sessionFactory
    	<property name="sessionFactory" ref="sessionFactory"></property>
    </bean> -->
   	<!-- 第三步: 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
    	<property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <!-- 第四步: 开启事务注解 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
	
	<import resource="classpath:bean.xml"/>
</beans>